.SS "ipv4 MODULE OPTIONS"
.TP
\-is\ \fIv4addr\fR
Set the \fBsource IP\fR address to \fIv4addr\fR. Default: 127.0.0.1
.TP
\-id\ \fIv4addr\fR
Set the \fBdestination IP\fR address to \fIv4addr\fR.
Default: \fIhostname\fR (CLI operand)
.TP
\-ih\ \fInum\fR
Set the IP \fBheader length\fR to \fInum\fR {0..15}. Default: auto
.TP
\-iv\ \fInum\fR
Set the IP \fBversion\fR to \fInum\fR {0..15}.
You almost definitely don't want to change this. Default: 4
.TP
\-iy\ \fInum\fR
Set the type of service (\fBTOS\fR) to \fInum\fR {0..255}. Default: 0
.TP
\-il\ \fInum\fR
Set the total IP \fBpacket length\fR to \fInum\fR {0..0xffff}.  Default: auto
.TP
\-ii\ \fInum\fR
Set the IP packet \fBID\fR to \fInum\fR {0..0xffff}.  Default: random
.TP
\-ifm\ \fInum\fR
Set the IP \fBmore fragments\fR flag to \fInum\fR {0|1}. Default: 0
.TP
\-ifd\ \fInum\fR
Set the IP \fBdon't fragment\fR flag to \fInum\fR {0|1}. Default: 0
.TP
\-ifr\ \fInum\fR
Set the IP \fBreserved\fR flag to \fInum\fR {0|1}. Default: 0
.TP
\-if\ \fInum\fR
Set the IP \fBfragment offset\fR to \fInum\fR {0..0x1fff}. Default: 0
.TP
\-it\ \fInum\fR
Set the IP \fBtime to live\fR to \fInum\fR {0..255}. Default: 255
.TP
\-ip\ \fInum\fR
Set the IP \fBprotcol\fR to \fInum\fR {0..255}.
Default: auto, or set by underlying protocol.
.TP
\-ic\ \fInum\fR
Set the IP \fBchecksum\fR to \fInum\fR {0..0xffff}. Default: auto

.TP
\-ionum\ \fIhex\ data\fR
Add an IP \fBoption\fR using the given \fIhex\ data\fR
string (length is always correct).  Do not use a 0x or 0X prefix!
Default: (no options)
.TP
\-ioeol
Add the IP option \fBend of list\fR.
.TP
\-ionop
Add the IP option \fBno-op\fR.
.TP
\-iorr\ \fIpointer\fB:\fIv4addr\fR[\fB:\fIv4addr\fR]...
Add the IP option \fBrecord route\fR using the given values. \fIpointer\fR is
hex {00..ff}, and \fIv4addr\fR is a normal IPv4 address.
.TP
\-iossr\ \fIpointer\fB:\fIv4addr\fR[\fB:\fIv4addr\fR]...
Set IP option \fBstrict source route\fR. \fIpointer\fR is hex {00..ff},
and \fIv4addr\fR is a normal IPv4 address.
.TP
\-iolsr\ \fIpointer\fB:\fIv4addr\fR[\fB:\fIv4addr\fR]...
Set IP option \fBloose source route\fR. \fIpointer\fR is hex {00..ff},
and \fIv4addr\fR is a normal IPv4 address.
.TP
\-iots\ \fIpointer\fB:\fIoverflow\fB:\fIflag\fR[[\fB:\fIv4addr\fR]\fB:\fInum\fR]...
Add the IP option \fBtimestamp\fR. \fIpointer\fR is hex {00..ff}, \fIoverflow\fR
is a \fInum\fR {0..15} as well as \fIflag\fR is {0|3}, \fIv4addr\fR a
normal IPv4 address and the timestamp value get set to \fInum\fR {0..0xffff}.
.TP
\-iosid\ \fInum\fR
Add the IP option \fBstream identifier\fR using the given \fInum\fR {0..0xffff}
as ID.

.TP
.B
NOTES
.RS 2
Many operating systems rewrite some or all of the IP header when sending
packets.  Exactly which headers get rewritten depends on the OS.  There is
no portable way to bypass this that the author is aware of. So some IP options
do not work on some operating systems.  Below is a list with known limitations.
This list is not by any means complete and what is here may not be accurate.
If you have more information, please contact the author of this software or
your OS vendor.
\" Common problems
.HP 2
\- IP source address is rewritten if it is zero.
.HP
\- IP packet ID is rewritten (to a randomish value) if it is zero.
.HP
\- IP checksum is always rewritten to the correct value.
.HP
\- Total packet length is always rewritten to the number of bytes sent.
\" Solaris start
.HP
\- IP header length works provided that the length given is not greater
than the number of bytes in the packet.  If it is, sendip will segfault.
.HP
\- IP don't fragment flag always set, other IP flags always cleared.
\" Solaris end
.HP
\- All other headers work as expected.
.RE
